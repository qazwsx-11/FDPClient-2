package net.ccbluex.liquidbounce.features.module.modules.exploit.disablers.verus

import net.ccbluex.liquidbounce.event.PacketEvent
import net.ccbluex.liquidbounce.event.WorldEvent
import net.ccbluex.liquidbounce.features.module.modules.exploit.disablers.DisablerMode
import net.minecraft.network.play.client.C0BPacketEntityAction
import net.minecraft.network.play.client.C0FPacketConfirmTransaction

class VerusCombat : DisablerMode("VerusCombat") {
    private var currentTrans = 0
    private val packetBuffer = LinkedList<Packet<INetHandlerPlayServer>>()
    override fun onEnable() {
        currentTrans = 0
    }
 }
    override fun onPacket(event: PacketEvent) {
        val packet = event.packet
        if(packet is C0FPacketConfirmTransaction) {
            packetBuffer.add(packet as Packet<INetHandlerPlayServer>)
            event.cancelEvent()
        }
        } else if (packet is C0BPacketEntityAction) {
            event.cancelEvent()
            disabler.debugMessage("Packet C0B")
        }
        
     override fun onAttack() {
     sendPacket(C08PacketPlayerBlockPlacement())
     }

    }
}
